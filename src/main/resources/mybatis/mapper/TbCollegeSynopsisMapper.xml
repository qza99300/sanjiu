<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atwangsi.user.dao.TbCollegeSynopsisMapper">
  <resultMap id="BaseResultMap" type="com.atwangsi.user.model.TbCollegeSynopsis">
    <id column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title_college" jdbcType="VARCHAR" property="titleCollege" />
    <result column="title_master" jdbcType="VARCHAR" property="titleMaster" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    college_id, user_id, title_college, title_master, create_date
  </sql>
  <select id="selectByExample" parameterType="com.atwangsi.user.model.TbCollegeSynopsisExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_college_synopsis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_college_synopsis
    where college_id = #{collegeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_college_synopsis
    where college_id = #{collegeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atwangsi.user.model.TbCollegeSynopsisExample">
    delete from tb_college_synopsis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atwangsi.user.model.TbCollegeSynopsis">
    insert into tb_college_synopsis (college_id, user_id, title_college, 
      title_master, create_date)
    values (#{collegeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{titleCollege,jdbcType=VARCHAR}, 
      #{titleMaster,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.atwangsi.user.model.TbCollegeSynopsis">
    insert into tb_college_synopsis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="titleCollege != null">
        title_college,
      </if>
      <if test="titleMaster != null">
        title_master,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="titleCollege != null">
        #{titleCollege,jdbcType=VARCHAR},
      </if>
      <if test="titleMaster != null">
        #{titleMaster,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atwangsi.user.model.TbCollegeSynopsisExample" resultType="java.lang.Long">
    select count(*) from tb_college_synopsis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_college_synopsis
    <set>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.titleCollege != null">
        title_college = #{record.titleCollege,jdbcType=VARCHAR},
      </if>
      <if test="record.titleMaster != null">
        title_master = #{record.titleMaster,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_college_synopsis
    set college_id = #{record.collegeId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title_college = #{record.titleCollege,jdbcType=VARCHAR},
      title_master = #{record.titleMaster,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atwangsi.user.model.TbCollegeSynopsis">
    update tb_college_synopsis
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="titleCollege != null">
        title_college = #{titleCollege,jdbcType=VARCHAR},
      </if>
      <if test="titleMaster != null">
        title_master = #{titleMaster,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
    </set>
    where college_id = #{collegeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atwangsi.user.model.TbCollegeSynopsis">
    update tb_college_synopsis
    set user_id = #{userId,jdbcType=INTEGER},
      title_college = #{titleCollege,jdbcType=VARCHAR},
      title_master = #{titleMaster,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE}
    where college_id = #{collegeId,jdbcType=INTEGER}
  </update>
</mapper>